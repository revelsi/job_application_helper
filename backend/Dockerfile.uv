# Job Application Helper - Backend Dockerfile with UV
# Optimized for Python 3.9+, FastAPI, and document processing using UV package manager
# UV provides 10-100x faster installs and better dependency resolution

FROM python:3.9-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONPATH=/app

# Install system dependencies and UV
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && curl -LsSf https://astral.sh/uv/install.sh | sh \
    && mv /root/.local/bin/uv /usr/local/bin/uv

# Create non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Set working directory
WORKDIR /app

# Copy UV configuration first for better caching
COPY pyproject.toml .
COPY uv.lock* .

# Create virtual environment and install dependencies with UV
# UV automatically handles virtual environment creation and dependency installation
RUN uv sync --no-dev --no-cache

# Copy application code
COPY . .

# Change ownership to non-root user
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Create data directories
RUN mkdir -p data/{documents,cache}

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD uv run python -c "import requests; requests.get('http://localhost:8000/health')" || exit 1

# Expose port
EXPOSE 8000

# Start the application using UV
CMD ["uv", "run", "python", "start_api.py"]
